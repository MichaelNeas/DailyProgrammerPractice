/// Given a string s consisting only of letters 'a' and 'b'. 
/// In a single step you can remove one palindromic subsequence from s.
/// Return the minimum number of steps to make the given string empty.
/// A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.
/// A string is called palindrome if is one that reads the same backward as well as forward.

class Solution {
    func removePalindromeSub(_ s: String) -> Int {
        return s.count == 0 ? 0 : isPalindrome(s) ? 1 : 2
    }
    
    func isPalindrome(_ s: String) -> Bool {
        let sArr = Array(s)
        for i in 0..<sArr.count {
            if sArr[i] != sArr[sArr.count-1-i] {
                return false
            } 
        }
        return true
    }
}